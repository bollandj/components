
#ifndef MIDI_DEFS_H_
#define MIDI_DEFS_H_

/* Channel Voice/Mode Messages */
#define MIDI_NOTE_OFF 0x80
#define MIDI_NOTE_ON 0x90
#define MIDI_POLYPHONIC_KEY_PRESSURE 0xA0
#define MIDI_CONTROL_CHANGE 0xB0
#define MIDI_PROGRAM_CHANGE 0xC0
#define MIDI_CHANNEL_PRESSURE 0xD0
#define MIDI_PITCH_BEND_CHANGE 0xE0

/* System Common Messages */
#define MIDI_SYSTEM_EXCLUSIVE 0xF0
#define MIDI_TIME_CODE_QUARTER_FRAME 0xF1
#define MIDI_SONG_POSITION_POINTER 0xF2
#define MIDI_SONG_SELECT 0xF3
#define MIDI_TUNE_REQUEST 0xF6
#define MIDI_END_OF_EXCLUSIVE 0xF7

/* System Real-Time Messages */
#define MIDI_TIMING_CLOCK 0xF8
#define MIDI_START 0xFA
#define MIDI_CONTINUE 0xFB
#define MIDI_STOP 0xFC
#define MIDI_ACTIVE_SENSING 0xFE
#define MIDI_RESET 0xFF

enum midi_messages {
    /* Channel Voice/Mode Messages */
    MIDI_CHANNEL_NOTE_OFF = 0x80,
    MIDI_CHANNEL_NOTE_ON = 0x90,
    MIDI_CHANNEL_POLYPHONIC_KEY_PRESSURE = 0xA0,
    MIDI_CHANNEL_CONTROL_CHANGE = 0xB0,
    MIDI_CHANNEL_PROGRAM_CHANGE = 0xC0,
    MIDI_CHANNEL_CHANNEL_PRESSURE = 0xD0,
    MIDI_CHANNEL_PITCH_BEND_CHANGE = 0xE0,

    /* System Common Messages */
    MIDI_COMMON_SYSTEM_EXCLUSIVE = 0xF0,
    MIDI_COMMON_TIME_CODE_QUARTER_FRAME = 0xF1,
    MIDI_COMMON_SONG_POSITION = 0xF2,
    MIDI_COMMON_SONG_SELECT = 0xF3,
    MIDI_COMMON_TUNE_REQUEST = 0xF6,
    MIDI_COMMON_END_OF_EXCLUSIVE = 0xF7,

    /* System Real-Time Messages */
    MIDI_REALTIME_TIMING_CLOCK = 0xF8,
    MIDI_REALTIME_START = 0xFA,
    MIDI_REALTIME_CONTINUE = 0xFB,
    MIDI_REALTIME_STOP = 0xFC,
    MIDI_REALTIME_ACTIVE_SENSING = 0xFE,
    MIDI_REALTIME_SYSTEM_RESET = 0xFF,
};

enum midi_channels {
    MIDI_CHANNEL_1 = 0,
    MIDI_CHANNEL_2,
    MIDI_CHANNEL_3,
    MIDI_CHANNEL_4,
    MIDI_CHANNEL_5,
    MIDI_CHANNEL_6,
    MIDI_CHANNEL_7,
    MIDI_CHANNEL_8,
    MIDI_CHANNEL_9,
    MIDI_CHANNEL_10,
    MIDI_CHANNEL_11,
    MIDI_CHANNEL_12,
    MIDI_CHANNEL_13,
    MIDI_CHANNEL_14,
    MIDI_CHANNEL_15,
    MIDI_CHANNEL_16,
};

/* Macros */
#define MIDI_IS_COMMAND(x) (x & 0x80)
#define MIDI_IS_DATA(x)    (!(x & 0x80))

#define MIDI_IS_SYSTEM_REAL_TIME(x) ((x & 0xF8) == 0xF8) // sys RT messages occupy 0xF8 - 0xFF
#define MIDI_IS_SYSTEM_MESSAGE(x)   ((x & 0xF0) == 0xF0)

#define MIDI_OMNI_OFF 0
#define MIDI_OMNI_ON  1

#endif /* MIDI_DEFS_H_ */
